#!/bin/sh -e

[[ "$CONNECTION_ID" = "psh-vpn" ]] || exit 0

# e.g. VPN_IP4_ADDRESS_0=10.8.0.58/32 0.0.0.0 cut -f2 -d: | cut -f1 -d/
VPN_IP="$(echo -n $VPN_IP4_ADDRESS_0 | awk '{print $1}' | awk -F / '{print $1}')"

# e.g. VPN_IP4_ROUTE_0=10.8.0.1/32 10.8.0.57 50
VPN_DEST="$(echo -n $VPN_IP4_ROUTE_0 | awk '{print $2}')"
VPN_ROUTE_METRIC="$(echo -n $VPN_IP4_ROUTE_0 | awk '{print $3}')"

case "$NM_DISPATCHER_ACTION" in
    vpn-up)
        # TODO: One can probably avoid loosening rp_filter by using VRF instead
        sysctl --quiet net.ipv4.conf."$VPN_IP_IFACE".rp_filter=2

        ip route add default via "$VPN_DEST" dev "$VPN_IP_IFACE" metric "$VPN_ROUTE_METRIC" table 200
        ip route add "$VPN_DEST" dev "$VPN_IP_IFACE" scope link src "$VPN_IP" metric "$VPN_ROUTE_METRIC" table 200
        iptables -t nat -A POSTROUTING -o "$VPN_IP_IFACE" -j SNAT --to-source "$VPN_IP"
        iptables -A OUTPUT -t mangle -p tcp --dport 2222 -j MARK --set-mark 0x1
        iptables -A OUTPUT -t mangle -p tcp --dport 444 -j MARK --set-mark 0x1
        ip rule add fwmark 0x1 table 200
    ;;
    *)
	exit 0
    ;;
esac
