#!/usr/bin/env python3

import argparse
import csv
from dataclasses import dataclass

# DES,CSBGU0,STK,SMART/EBS,,,,,,12.40
# DES,EMIM,STK,SMART/AEB,,,,,,7.50
# DES,IWDA,STK,SMART/AEB,,,,,,67.50
# DES,MTD,STK,SMART/FWB,,,,,,12.40

@dataclass(frozen=True)
class StockEntry:
    name: str
    exchange: str


TARGETS = {
    "CSBGU0": 0.125,
    "EMIM": 0.075,
    "IWDA": 0.675,
    "MTD": 0.125,
}

assert sum(TARGETS.values()) == 1.0

parser = argparse.ArgumentParser(description='rebalance portfolio')
parser.add_argument('--total', help='total EUR pre-rebalance', required=True, type=int)
parser.add_argument('--spend', help='EUR amount to spend', required=True, type=int)
parser.add_argument('--current-csv', help='CSV file containing the current balances', type=argparse.FileType('r'))
parser.add_argument('--target-csv', help='CSV file to write to', type=argparse.FileType('w'))
args = parser.parse_args()

stock_percentages = 0.0
current_targets = {}

for row in csv.reader(args.current_csv):
    stock_name = row[1]
    assert stock_name in TARGETS
    stock_target = float(row[-1])
    current_targets[stock_name] = stock_target
    stock_percentages += stock_target

cash_percentage = 100.0 - stock_percentages
new_cash_percentage = cash_percentage * (args.total - args.spend) / args.total
to_spend_cash_percentage = cash_percentage - new_cash_percentage
new_targets = {
    stock_name: round(current_targets[stock_name] + (to_spend_cash_percentage * TARGETS[stock_name]), 2)
    for stock_name in current_targets
}

# remaining_to_100 = 100.0 - new_cash_percentage - sum(new_targets.values())
# print(remaining_to_100)

writer = csv.writer(args.target_csv)
args.current_csv.seek(0)
for row in csv.reader(args.current_csv):
    stock_name = row[1]
    row[-1] = new_targets[stock_name]
    writer.writerow(row)
